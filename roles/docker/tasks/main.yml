---
- name: Update APT package cache
  apt:
    update_cache: yes

# - name: Ensure LXD/LXC services are stopped
#   service:
#     name:
#       - lxd-containers.service
#       - lxd.socket
#       - lxcfs.service
#     state: stopped
#     enabled: no
#   ignore_errors: yes

# - name: Uninstall LXD/LXC packages
#   apt:
#     name: "{{ item }}"
#     state: absent
#     purge: yes
#   with_items:
#     - lxc-common
#     - lxc-docker
#     - lxcfs
#     - lxd
#     - lxd-client
#     # - lxc
#     # - lxc-android-config
#     # - lxc-dev
#     # - lxc-templates
#     # - lxc-tests
#     # - lxc1
#     # - lxc2
#     # - lxd-tools

# - name: Remove lxc user
#   user:
#     name: lxc
#     state: absent

- name: Install package prerequisites for Docker
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - linux-image-extra-{{ ansible_kernel }}
    - linux-image-extra-virtual
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common

- name: Add Docker repo key
  apt_key:
    keyserver: "hkp://p80.pool.sks-keyservers.net:80"
    id: "58118E89F3A912897C070ADBF76221572C52609D"

- name: Add Docker repo
  apt_repository:
    repo: "deb https://apt.dockerproject.org/repo {{ansible_distribution|lower}}-{{ ansible_distribution_release }} main"
    update_cache: yes

- name: Install docker package
  apt:
    name: docker-engine
    state: present

- name: Install docker-py
  pip:
    name: docker-py

- name: Create docker group
  group:
    name: docker

- name: Grant docker privileges to the Ansible user (assume this is an admin user)
  user:
    name: "{{ ansible_ssh_user }}"
    groups: docker
    append: yes

- name: Ensure docker service is started
  service:
    name: docker
    state: started
    enabled: yes
